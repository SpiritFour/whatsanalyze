{"version":3,"sources":["webpack:///./functions/transformChatData.js","webpack:///./functions/colors.js","webpack:///./node_modules/.pnpm/moment@2.30.1/node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./components/charts/LineChart.vue?db5f","webpack:///./components/charts/LineChart.vue","webpack:///./components/charts/LineChart.vue?5aff"],"names":["Chat","_this","chatObject","arguments","length","undefined","groupAfter","maxWordsWordCloud","_classCallCheck","this","_groupAfter","_maxWordsWordCloud","filterdChatObject","removeSystemMessages","messagesTemp","Object","entries","getMessagesPerPerson","numPersonsInChat","personColorMap","forEach","item","idx","chatColors","_sortedFreqList","_messagesPerPerson","_dates","__reload","_createClass","key","value","_lineGraphData","Promise","resolve","_getLineGraphData","_funfacts","_getFunFacts","_allWords","_getAllWords","_hourlyData","_getHourlyData","_dailyData","_getDailyData","_weeklyData","_getWeeklyData","_shareOfSpeech","_getShareOfSpeech","get","createSortedFreqDict","set","_getMessagesPerPerson","_this2","persons","sort","a","b","enrichedPersons","grouped","person","messages","concat","push","name","color","date","absolute_id","map","message","opacity","labels","messagesPerPerson","datasets","label","backgroundColor","hexToRgbA","borderColor","data","numberOfWords","getTotalNumberOfWords","longestMessage","get_longest_message","personalFreqDic","uniqueWords","sortedEmojis","match_emojys","averageMessageLength","Math","round","hourlyDataFromChat","moment","dailyDataFromChat","weeklyDataFromChat","daysDict","s","e","initDateDict","m","isBefore","add","format","getDaysArray","Date","arr","len","min","Infinity","arrayMin","dates","max","arrayMax","keys","values","borderWidth","lineTension","pointRadius","pointHitRadius","maxDate","minDate","diffDate","getFullYear","getMonth","sortedFreqDict","filter","word","stopwords_de","includes","toLowerCase","stopwords","freq","_this3","then","x","slice","author","reduce","rv","n","_ref","split","chat_distribution","_step","terminationCondition","mostUsedEmojis","Set","regexpEmojiPresentation","_iterator","_createForOfIteratorHelper","done","entry","size","emojis","onlyEmoji","match","err","f","chat_object","max_value","chat_line","cur_length","message_string","_ref2","message_array","replace","distribution","setHours","groupBy","hours","Array","fill","getHours","getDay","hex","c","alpha","test","substring","join","Error","updateAlpha","rgba","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","code","module","exports","extends","Line","props","chartdata","options","type","default","responsive","maintainAspectRatio","legend","position","display","scales","xAxes","gridLines","yAxes","scaleLabel","labelString","$t","ticks","precision","beginAtZero","elements","line","tension","watch","handler","updateGraph","deep","methods","getLineGraphData","renderChart","mounted","component","render","staticRenderFns"],"mappings":"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","file":"534f943.js","sourcesContent":["import { chatColors, hexToRgbA } from \"~/functions/colors\";\nimport stopwords_de from \"stopwords-de\";\nimport stopwords from \"stopwords-en\";\nimport { onlyEmoji } from \"emoji-aware\";\nimport * as moment from \"moment\";\n\nexport class Chat {\n  static removeSystemMessages(chatObject) {\n    // remove the first message with slice (\"this chat is encrypted\") and all system messages via the filter.\n    return chatObject\n      .filter((message) => message.author.toLowerCase() !== \"system\")\n      .slice(1);\n  }\n\n  static groupBy(chatObject, key) {\n    return chatObject.reduce(function (rv, x) {\n      (rv[x[key]] = rv[x[key]] || []).push(x);\n      return rv;\n    }, {});\n  }\n\n  static getTotalNumberOfWords(chatObject) {\n    return chatObject.reduce(\n      (n, { message }) => n + message.split(\" \").length,\n      0\n    );\n  }\n\n  // Find hapax legomenons, a word or an expression that occurs only once within the context.\n  static uniqueWords(chat_distribution) {\n    function singleOccurrence(value) {\n      return value[1] === 1;\n    }\n    return chat_distribution.filter(singleOccurrence);\n  }\n\n  static match_emojys(chat_distribution, terminationCondition = 3) {\n    let mostUsedEmojis = new Set();\n    const regexpEmojiPresentation = /\\p{Emoji_Presentation}/gu;\n    for (let entry of chat_distribution) {\n      if (mostUsedEmojis.size === terminationCondition) {\n        return mostUsedEmojis;\n      }\n      let emojis = onlyEmoji(entry[0]);\n      if (emojis.length !== 0 && emojis[0].match(regexpEmojiPresentation)) {\n        mostUsedEmojis.add(emojis[0]);\n      }\n    }\n    return mostUsedEmojis;\n  }\n\n  static get_longest_message(chat_object) {\n    let max_value = 0;\n    chat_object.forEach((chat_line) => {\n      const cur_length = chat_line.message.split(\" \").length;\n      if (max_value < cur_length) {\n        max_value = cur_length;\n      }\n    });\n    return max_value;\n  }\n\n  // creates a sorted FreqArray for the chat corpus [{word: 10},{hi:9},...]\n  static createSortedFreqDict(chatObject) {\n    let message_string = chatObject.reduce(\n      (n, { message }) => n + \" \" + message,\n      \" \"\n    );\n    message_string = message_string.replace(/\\u200E/gi, \"\");\n    let message_array = message_string.replace(/\\n/g, \" \").split(\" \");\n    let distribution = {};\n    message_array.map(function (item) {\n      distribution[item] = (distribution[item] || 0) + 1;\n    });\n    let sorted_distribution = Object.entries(distribution).sort(\n      (a, b) => b[1] - a[1]\n    );\n    return sorted_distribution;\n  }\n\n  static toDayDates(chatObject) {\n    return chatObject.map((message) => message.date.setHours(0, 0, 0, 0));\n  }\n\n  static getMessagesPerPerson(chatObject) {\n    return this.groupBy(chatObject, \"author\");\n  }\n\n  static hourlyDataFromChat(messages) {\n    let hours = new Array(24).fill(0);\n    messages.map((message) => {\n      hours[message.date.getHours()] += 1;\n    });\n    return hours;\n  }\n\n  static dailyDataFromChat(messages) {\n    let hours = new Array(7).fill(0);\n    messages.map((message) => {\n      hours[message.date.getDay()] += 1;\n    });\n    return hours;\n  }\n\n  static weeklyDataFromChat(messages) {\n    let hours = new Array(12).fill(0);\n    messages.map((message) => {\n      hours[message.date.getMonth()] += 1;\n    });\n    return hours;\n  }\n\n  constructor(chatObject = [], groupAfter = 9, maxWordsWordCloud = 150) {\n    // this one is the complete input\n    this.chatObject = chatObject;\n\n    // for groupmessages we probably want to group after some time\n    this._groupAfter = groupAfter;\n    // max number of words shown in word cloud\n    this._maxWordsWordCloud = maxWordsWordCloud;\n    // here we remove messages (i.e. system messages)\n    this.filterdChatObject = Chat.removeSystemMessages(this.chatObject);\n    //number of persons in chat\n    const messagesTemp = Object.entries(\n      Chat.getMessagesPerPerson(this.filterdChatObject)\n    );\n    this.numPersonsInChat = messagesTemp.length;\n    // All persons\n    this.personColorMap = {};\n    messagesTemp.forEach((item, idx) => {\n      this.personColorMap[item[0]] = chatColors[idx % chatColors.length];\n    });\n\n    // frequencies for all words in chat (excluding system)\n    this._sortedFreqList = null;\n    // here we have the messages per person, also adding colors to them\n    this._messagesPerPerson = null;\n\n    // all dates of messages\n    this._dates = null;\n\n    this.__reload();\n  }\n\n  __reload() {\n    this._lineGraphData = Promise.resolve(this._getLineGraphData());\n    this._funfacts = Promise.resolve(this._getFunFacts());\n    this._allWords = Promise.resolve(this._getAllWords());\n    this._hourlyData = Promise.resolve(this._getHourlyData());\n    this._dailyData = Promise.resolve(this._getDailyData());\n    this._weeklyData = Promise.resolve(this._getWeeklyData());\n    this._shareOfSpeech = Promise.resolve(this._getShareOfSpeech());\n  }\n\n  get sortedFreqDict() {\n    if (this._sortedFreqList) return this._sortedFreqList;\n    this._sortedFreqList = Chat.createSortedFreqDict(this.chatObject);\n    return this._sortedFreqList;\n  }\n\n  get groupAfter() {\n    return this._groupAfter;\n  }\n\n  get messagesPerPerson() {\n    if (this._messagesPerPerson) return this._messagesPerPerson;\n    this._messagesPerPerson = this._getMessagesPerPerson();\n    return this._messagesPerPerson;\n  }\n\n  set groupAfter(groupAfter) {\n    this._groupAfter = groupAfter;\n    this._messagesPerPerson = null;\n\n    this._lineGraphData = Promise.resolve(this._getLineGraphData());\n    this._funfacts = Promise.resolve(this._getFunFacts());\n    // this._allWords = Promise.resolve(this._getAllWords());\n    this._hourlyData = Promise.resolve(this._getHourlyData());\n    this._dailyData = Promise.resolve(this._getDailyData());\n    this._weeklyData = Promise.resolve(this._getWeeklyData());\n    this._shareOfSpeech = Promise.resolve(this._getShareOfSpeech());\n  }\n\n  _getMessagesPerPerson() {\n    let persons = Object.entries(\n      Chat.getMessagesPerPerson(this.filterdChatObject)\n    );\n    persons = persons.sort((a, b) => b[1].length - a[1].length);\n\n    let enrichedPersons = [];\n\n    let grouped = false;\n\n    persons.forEach((person, idx) => {\n      if (idx > this._groupAfter) {\n        enrichedPersons[this._groupAfter].messages = enrichedPersons[\n          this._groupAfter\n        ].messages.concat(person[1]);\n        grouped = true;\n      } else {\n        enrichedPersons.push({\n          name: person[0],\n          color: this.personColorMap[person[0]],\n          messages: person[1].sort((a, b) => a.date - b.date),\n        });\n      }\n    });\n\n    if (grouped) {\n      enrichedPersons[this._groupAfter].name = \"Others\";\n      enrichedPersons[this._groupAfter].color = \"#D3D3D3\";\n      enrichedPersons[this._groupAfter].messages.sort(\n        (a, b) => a.absolute_id - b.absolute_id\n      );\n    }\n    return enrichedPersons;\n  }\n\n  get dates() {\n    if (this._dates) return this._dates;\n    this._dates = this.filterdChatObject.map((message) => message.date);\n    return this._dates;\n  }\n\n  _getShareOfSpeech(opacity = 1) {\n    return {\n      labels: this.messagesPerPerson.map((person) => person.name),\n      datasets: [\n        {\n          label: \"Share of Speech\",\n          backgroundColor: this.messagesPerPerson.map((person) =>\n            hexToRgbA(person.color, opacity)\n          ),\n          borderColor: this.messagesPerPerson.map((person) => person.color),\n          data: this.messagesPerPerson.map((person) => person.messages.length),\n        },\n      ],\n    };\n  }\n\n  getShareOfSpeech() {\n    return this._shareOfSpeech;\n  }\n\n  _getFunFacts() {\n    let people = this.messagesPerPerson.map((person) => {\n      let name = person.name;\n      let numberOfWords = Chat.getTotalNumberOfWords(person.messages);\n      let longestMessage = Chat.get_longest_message(person.messages);\n      let personalFreqDic = Chat.createSortedFreqDict(person.messages);\n\n      let uniqueWords = Chat.uniqueWords(personalFreqDic).length;\n      let sortedEmojis = Chat.match_emojys(personalFreqDic, 3);\n      let averageMessageLength = numberOfWords / person.messages.length;\n      return {\n        color: person.color,\n        name: name,\n        numberOfWords: numberOfWords,\n        longestMessage: longestMessage,\n        uniqueWords: uniqueWords,\n        sortedEmojis: sortedEmojis,\n        averageMessageLength: Math.round(averageMessageLength),\n      };\n    });\n    return people;\n  }\n\n  getFunFacts() {\n    return this._funfacts;\n  }\n\n  _getHourlyData(opacity = 1) {\n    return {\n      labels: [\n        \"0AM\",\n        \"1AM\",\n        \"2AM\",\n        \"3AM\",\n        \"4AM\",\n        \"5AM\",\n        \"6AM\",\n        \"7AM\",\n        \"8AM\",\n        \"9AM\",\n        \"10AM\",\n        \"11AM\",\n        \"12PM\",\n        \"1PM\",\n        \"2PM\",\n        \"3PM\",\n        \"4PM\",\n        \"5PM\",\n        \"6PM\",\n        \"7PM\",\n        \"8PM\",\n        \"9PM\",\n        \"10PM\",\n        \"11PM\",\n      ],\n      datasets: this.messagesPerPerson.map((person) => {\n        return {\n          label: person.name,\n          backgroundColor: hexToRgbA(person.color, opacity),\n          borderColor: person.color,\n          data: Chat.hourlyDataFromChat(person.messages),\n        };\n      }),\n    };\n  }\n\n  getHourlyData() {\n    return this._hourlyData;\n  }\n\n  _getDailyData(opacity = 1) {\n    return {\n      labels: moment.weekdays(),\n      datasets: this.messagesPerPerson.map((person) => {\n        return {\n          label: person.name,\n          backgroundColor: hexToRgbA(person.color, opacity),\n          borderColor: person.color,\n          data: Chat.dailyDataFromChat(person.messages),\n        };\n      }),\n    };\n  }\n\n  getDailyData() {\n    return this._dailyData;\n  }\n\n  _getWeeklyData(opacity = 1) {\n    return {\n      labels: moment.months(),\n      datasets: this.messagesPerPerson.map((person) => {\n        return {\n          label: person.name,\n          backgroundColor: hexToRgbA(person.color, opacity),\n          borderColor: person.color,\n          data: Chat.weeklyDataFromChat(person.messages),\n        };\n      }),\n    };\n  }\n\n  getWeeklyData() {\n    return this._weeklyData;\n  }\n\n  _getLineGraphData() {\n    let getDaysArray = function (s, e) {\n      let initDateDict = {};\n      for (let m = moment(s); m.isBefore(e); m.add(1, \"days\")) {\n        initDateDict[m.format(\"YYYY-MM-DD\")] = 0;\n      }\n      return initDateDict;\n    };\n    function arrayMin(arr) {\n      var len = arr.length,\n        min = Infinity;\n      while (len--) {\n        if (arr[len] < min) {\n          min = arr[len];\n        }\n      }\n      return min;\n    }\n\n    function arrayMax(arr) {\n      var len = arr.length,\n        max = -Infinity;\n      while (len--) {\n        if (arr[len] > max) {\n          max = arr[len];\n        }\n      }\n      return max;\n    }\n\n    const minDate = new Date(arrayMin(this.dates));\n    const maxDate = new Date(arrayMax(this.dates));\n    let daysDict = getDaysArray(minDate, maxDate);\n    this.filterdChatObject.map((message) => {\n      daysDict[moment(message.date).format(\"YYYY-MM-DD\")] += 1;\n    });\n    return {\n      labels: Object.keys(daysDict),\n      datasets: [\n        {\n          data: Object.values(daysDict),\n          borderWidth: 1,\n          lineTension: 0,\n          pointRadius: 0,\n          pointHitRadius: 2,\n          backgroundColor: hexToRgbA(\"#EF5350\"),\n          borderColor: hexToRgbA(\"#B71C1C\", [1]),\n        },\n      ],\n    };\n  }\n\n  getLineGraphData() {\n    return this._lineGraphData;\n  }\n\n  getLineGraphXAxis(maxDate, minDate) {\n    var diffDate = new Date(maxDate - minDate);\n    var unit = \"\";\n    if (diffDate.getFullYear() > 1971) unit = \"year\";\n    else if (diffDate.getFullYear() > 1970 && diffDate.getMonth() > 0)\n      unit = \"month\";\n    else unit = \"day\";\n    return unit;\n  }\n\n  _getAllWords() {\n    return this.sortedFreqDict\n      .filter(\n        (word) =>\n          !(\n            stopwords_de.includes(word[0].toLowerCase()) ||\n            stopwords.includes(word[0].toLowerCase()) ||\n            [\n              \"\",\n              \"ich\",\n              \"du\",\n              \"wir\",\n              \"aber\",\n              \"<media\",\n              \"<attached:\",\n              \"audio\",\n              \"omitted>\",\n              \"bild\",\n              \"image\",\n              \"<medien\",\n              \"ausgeschlossen>\",\n              \"weggelassen\",\n              \"omitted\",\n              \"_\",\n              \"_weggelassen>\",\n              \"_ommited>\",\n              \"_omesso>\",\n              \"_omitted\",\n              \"_weggelassen\",\n              \"_attached\",\n            ].includes(word[0].toLowerCase())\n          ) && word[1] > 1\n      )\n      .map((word) => {\n        return { word: word[0], freq: word[1] };\n      });\n  }\n\n  getAllWords() {\n    return this._allWords.then((x) => x.slice(0, this._maxWordsWordCloud));\n  }\n}\n","export let chatColors = [\n  \"#00535f\",\n  \"#51b0bc\",\n  \"#21a68d\",\n  \"#ffd45c\",\n  \"#35cd96\",\n  \"#ed8c2b\",\n  \"#b3f94f\",\n  \"#ba33dc\",\n  \"#ffa35c\",\n  \"#227373\",\n  \"#ff855c\",\n];\n\nexport function hexToRgbA(hex, alpha = 0.1) {\n  var c;\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n    c = hex.substring(1).split(\"\");\n    if (c.length == 3) {\n      c = [c[0], c[0], c[1], c[1], c[2], c[2]];\n    }\n    c = \"0x\" + c.join(\"\");\n    return (\n      \"rgba(\" +\n      [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(\",\") +\n      \", \" +\n      alpha +\n      \" )\"\n    );\n  }\n  throw new Error(\"Bad Hex\");\n}\n\nexport function updateAlpha(rgba, alpha = 0.1) {\n  return rgba.split(\",\").slice(0, -1).join(\",\") + \",\" + alpha + \")\";\n}\n","var map = {\n\t\"./af\": 664,\n\t\"./af.js\": 664,\n\t\"./ar\": 665,\n\t\"./ar-dz\": 666,\n\t\"./ar-dz.js\": 666,\n\t\"./ar-kw\": 667,\n\t\"./ar-kw.js\": 667,\n\t\"./ar-ly\": 668,\n\t\"./ar-ly.js\": 668,\n\t\"./ar-ma\": 669,\n\t\"./ar-ma.js\": 669,\n\t\"./ar-ps\": 670,\n\t\"./ar-ps.js\": 670,\n\t\"./ar-sa\": 671,\n\t\"./ar-sa.js\": 671,\n\t\"./ar-tn\": 672,\n\t\"./ar-tn.js\": 672,\n\t\"./ar.js\": 665,\n\t\"./az\": 673,\n\t\"./az.js\": 673,\n\t\"./be\": 674,\n\t\"./be.js\": 674,\n\t\"./bg\": 675,\n\t\"./bg.js\": 675,\n\t\"./bm\": 676,\n\t\"./bm.js\": 676,\n\t\"./bn\": 677,\n\t\"./bn-bd\": 678,\n\t\"./bn-bd.js\": 678,\n\t\"./bn.js\": 677,\n\t\"./bo\": 679,\n\t\"./bo.js\": 679,\n\t\"./br\": 680,\n\t\"./br.js\": 680,\n\t\"./bs\": 681,\n\t\"./bs.js\": 681,\n\t\"./ca\": 682,\n\t\"./ca.js\": 682,\n\t\"./cs\": 683,\n\t\"./cs.js\": 683,\n\t\"./cv\": 684,\n\t\"./cv.js\": 684,\n\t\"./cy\": 685,\n\t\"./cy.js\": 685,\n\t\"./da\": 686,\n\t\"./da.js\": 686,\n\t\"./de\": 687,\n\t\"./de-at\": 688,\n\t\"./de-at.js\": 688,\n\t\"./de-ch\": 689,\n\t\"./de-ch.js\": 689,\n\t\"./de.js\": 687,\n\t\"./dv\": 690,\n\t\"./dv.js\": 690,\n\t\"./el\": 691,\n\t\"./el.js\": 691,\n\t\"./en-au\": 692,\n\t\"./en-au.js\": 692,\n\t\"./en-ca\": 693,\n\t\"./en-ca.js\": 693,\n\t\"./en-gb\": 694,\n\t\"./en-gb.js\": 694,\n\t\"./en-ie\": 695,\n\t\"./en-ie.js\": 695,\n\t\"./en-il\": 696,\n\t\"./en-il.js\": 696,\n\t\"./en-in\": 697,\n\t\"./en-in.js\": 697,\n\t\"./en-nz\": 698,\n\t\"./en-nz.js\": 698,\n\t\"./en-sg\": 699,\n\t\"./en-sg.js\": 699,\n\t\"./eo\": 700,\n\t\"./eo.js\": 700,\n\t\"./es\": 701,\n\t\"./es-do\": 702,\n\t\"./es-do.js\": 702,\n\t\"./es-mx\": 703,\n\t\"./es-mx.js\": 703,\n\t\"./es-us\": 704,\n\t\"./es-us.js\": 704,\n\t\"./es.js\": 701,\n\t\"./et\": 705,\n\t\"./et.js\": 705,\n\t\"./eu\": 706,\n\t\"./eu.js\": 706,\n\t\"./fa\": 707,\n\t\"./fa.js\": 707,\n\t\"./fi\": 708,\n\t\"./fi.js\": 708,\n\t\"./fil\": 709,\n\t\"./fil.js\": 709,\n\t\"./fo\": 710,\n\t\"./fo.js\": 710,\n\t\"./fr\": 711,\n\t\"./fr-ca\": 712,\n\t\"./fr-ca.js\": 712,\n\t\"./fr-ch\": 713,\n\t\"./fr-ch.js\": 713,\n\t\"./fr.js\": 711,\n\t\"./fy\": 714,\n\t\"./fy.js\": 714,\n\t\"./ga\": 715,\n\t\"./ga.js\": 715,\n\t\"./gd\": 716,\n\t\"./gd.js\": 716,\n\t\"./gl\": 717,\n\t\"./gl.js\": 717,\n\t\"./gom-deva\": 718,\n\t\"./gom-deva.js\": 718,\n\t\"./gom-latn\": 719,\n\t\"./gom-latn.js\": 719,\n\t\"./gu\": 720,\n\t\"./gu.js\": 720,\n\t\"./he\": 721,\n\t\"./he.js\": 721,\n\t\"./hi\": 722,\n\t\"./hi.js\": 722,\n\t\"./hr\": 723,\n\t\"./hr.js\": 723,\n\t\"./hu\": 724,\n\t\"./hu.js\": 724,\n\t\"./hy-am\": 725,\n\t\"./hy-am.js\": 725,\n\t\"./id\": 726,\n\t\"./id.js\": 726,\n\t\"./is\": 727,\n\t\"./is.js\": 727,\n\t\"./it\": 728,\n\t\"./it-ch\": 729,\n\t\"./it-ch.js\": 729,\n\t\"./it.js\": 728,\n\t\"./ja\": 730,\n\t\"./ja.js\": 730,\n\t\"./jv\": 731,\n\t\"./jv.js\": 731,\n\t\"./ka\": 732,\n\t\"./ka.js\": 732,\n\t\"./kk\": 733,\n\t\"./kk.js\": 733,\n\t\"./km\": 734,\n\t\"./km.js\": 734,\n\t\"./kn\": 735,\n\t\"./kn.js\": 735,\n\t\"./ko\": 736,\n\t\"./ko.js\": 736,\n\t\"./ku\": 737,\n\t\"./ku-kmr\": 738,\n\t\"./ku-kmr.js\": 738,\n\t\"./ku.js\": 737,\n\t\"./ky\": 739,\n\t\"./ky.js\": 739,\n\t\"./lb\": 740,\n\t\"./lb.js\": 740,\n\t\"./lo\": 741,\n\t\"./lo.js\": 741,\n\t\"./lt\": 742,\n\t\"./lt.js\": 742,\n\t\"./lv\": 743,\n\t\"./lv.js\": 743,\n\t\"./me\": 744,\n\t\"./me.js\": 744,\n\t\"./mi\": 745,\n\t\"./mi.js\": 745,\n\t\"./mk\": 746,\n\t\"./mk.js\": 746,\n\t\"./ml\": 747,\n\t\"./ml.js\": 747,\n\t\"./mn\": 748,\n\t\"./mn.js\": 748,\n\t\"./mr\": 749,\n\t\"./mr.js\": 749,\n\t\"./ms\": 750,\n\t\"./ms-my\": 751,\n\t\"./ms-my.js\": 751,\n\t\"./ms.js\": 750,\n\t\"./mt\": 752,\n\t\"./mt.js\": 752,\n\t\"./my\": 753,\n\t\"./my.js\": 753,\n\t\"./nb\": 754,\n\t\"./nb.js\": 754,\n\t\"./ne\": 755,\n\t\"./ne.js\": 755,\n\t\"./nl\": 756,\n\t\"./nl-be\": 757,\n\t\"./nl-be.js\": 757,\n\t\"./nl.js\": 756,\n\t\"./nn\": 758,\n\t\"./nn.js\": 758,\n\t\"./oc-lnc\": 759,\n\t\"./oc-lnc.js\": 759,\n\t\"./pa-in\": 760,\n\t\"./pa-in.js\": 760,\n\t\"./pl\": 761,\n\t\"./pl.js\": 761,\n\t\"./pt\": 762,\n\t\"./pt-br\": 763,\n\t\"./pt-br.js\": 763,\n\t\"./pt.js\": 762,\n\t\"./ro\": 764,\n\t\"./ro.js\": 764,\n\t\"./ru\": 765,\n\t\"./ru.js\": 765,\n\t\"./sd\": 766,\n\t\"./sd.js\": 766,\n\t\"./se\": 767,\n\t\"./se.js\": 767,\n\t\"./si\": 768,\n\t\"./si.js\": 768,\n\t\"./sk\": 769,\n\t\"./sk.js\": 769,\n\t\"./sl\": 770,\n\t\"./sl.js\": 770,\n\t\"./sq\": 771,\n\t\"./sq.js\": 771,\n\t\"./sr\": 772,\n\t\"./sr-cyrl\": 773,\n\t\"./sr-cyrl.js\": 773,\n\t\"./sr.js\": 772,\n\t\"./ss\": 774,\n\t\"./ss.js\": 774,\n\t\"./sv\": 775,\n\t\"./sv.js\": 775,\n\t\"./sw\": 776,\n\t\"./sw.js\": 776,\n\t\"./ta\": 777,\n\t\"./ta.js\": 777,\n\t\"./te\": 778,\n\t\"./te.js\": 778,\n\t\"./tet\": 779,\n\t\"./tet.js\": 779,\n\t\"./tg\": 780,\n\t\"./tg.js\": 780,\n\t\"./th\": 781,\n\t\"./th.js\": 781,\n\t\"./tk\": 782,\n\t\"./tk.js\": 782,\n\t\"./tl-ph\": 783,\n\t\"./tl-ph.js\": 783,\n\t\"./tlh\": 784,\n\t\"./tlh.js\": 784,\n\t\"./tr\": 785,\n\t\"./tr.js\": 785,\n\t\"./tzl\": 786,\n\t\"./tzl.js\": 786,\n\t\"./tzm\": 787,\n\t\"./tzm-latn\": 788,\n\t\"./tzm-latn.js\": 788,\n\t\"./tzm.js\": 787,\n\t\"./ug-cn\": 789,\n\t\"./ug-cn.js\": 789,\n\t\"./uk\": 790,\n\t\"./uk.js\": 790,\n\t\"./ur\": 791,\n\t\"./ur.js\": 791,\n\t\"./uz\": 792,\n\t\"./uz-latn\": 793,\n\t\"./uz-latn.js\": 793,\n\t\"./uz.js\": 792,\n\t\"./vi\": 794,\n\t\"./vi.js\": 794,\n\t\"./x-pseudo\": 795,\n\t\"./x-pseudo.js\": 795,\n\t\"./yo\": 796,\n\t\"./yo.js\": 796,\n\t\"./zh-cn\": 797,\n\t\"./zh-cn.js\": 797,\n\t\"./zh-hk\": 798,\n\t\"./zh-hk.js\": 798,\n\t\"./zh-mo\": 799,\n\t\"./zh-mo.js\": 799,\n\t\"./zh-tw\": 800,\n\t\"./zh-tw.js\": 800\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 820;","import mod from \"-!../../node_modules/.pnpm/babel-loader@8.3.0_@babel+core@7.23.7_webpack@4.47.0/node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/.pnpm/@nuxt+components@2.2.1_consola@3.2.3/node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/.pnpm/vue-loader@15.11.1_babel-core@7.0.0-bridge.0_cache-loader@4.1.0_css-loader@5.2.7_lodash@4.17._plymz6q3yttqenf645wwiztxby/node_modules/vue-loader/lib/index.js??vue-loader-options!./LineChart.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/.pnpm/babel-loader@8.3.0_@babel+core@7.23.7_webpack@4.47.0/node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/.pnpm/@nuxt+components@2.2.1_consola@3.2.3/node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/.pnpm/vue-loader@15.11.1_babel-core@7.0.0-bridge.0_cache-loader@4.1.0_css-loader@5.2.7_lodash@4.17._plymz6q3yttqenf645wwiztxby/node_modules/vue-loader/lib/index.js??vue-loader-options!./LineChart.vue?vue&type=script&lang=js\"","\nimport { Line } from \"vue-chartjs\";\nimport { Chat } from \"~/functions/transformChatData\";\n\nexport default {\n  extends: Line,\n  props: {\n    chartdata: new Chat(),\n    options: {\n      type: Object,\n      default: function () {\n        return {\n          pointHitRadius: 2,\n          responsive: true,\n          maintainAspectRatio: false,\n          lineTension: 0,\n          legend: {\n            position: \"bottom\",\n            display: false,\n          },\n          scales: {\n            xAxes: [\n              {\n                type: \"time\",\n                gridLines: {\n                  display: false,\n                  color: \"#FFFFFF\",\n                },\n              },\n            ],\n            yAxes: [\n              {\n                scaleLabel: {\n                  display: true,\n                  labelString: this.$t(\"messages\"),\n                },\n                ticks: {\n                  precision: 0,\n                  beginAtZero: true,\n                },\n              },\n            ],\n          },\n          elements: {\n            line: {\n              tension: 0,\n            },\n          },\n        };\n      },\n    },\n  },\n  watch: {\n    chartdata: {\n      handler() {\n        this.updateGraph();\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    updateGraph: function () {\n      this.chartdata\n        .getLineGraphData()\n        .then((x) => this.renderChart(x, this.options));\n    },\n  },\n  mounted() {\n    this.updateGraph();\n  },\n};\n","var render, staticRenderFns\nimport script from \"./LineChart.vue?vue&type=script&lang=js\"\nexport * from \"./LineChart.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/.pnpm/vue-loader@15.11.1_babel-core@7.0.0-bridge.0_cache-loader@4.1.0_css-loader@5.2.7_lodash@4.17._plymz6q3yttqenf645wwiztxby/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}